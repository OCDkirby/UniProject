<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:viewModels="clr-namespace:UniProject.ViewModels;assembly=UniProject"
             x:Class="UniProject.Views.LocationPage"
             BackgroundColor="#FFB266">
    
    <!-- This context tells the layout that it will be working with a SchoolViewModel.
        It can be moved into higher or lower scopes as desired, 
        for instance if you wish to have a ListView bound to a LocationsInBuildingViewModel but also require another binding
        context somewhere else-->


    <StackLayout>
        <!-- Using a Location View model -->
        <!--needs to be dynamic based on which selected Building -->
        <Label Text="{Binding BuildingNameFormatted}"
               MaxLines="1"
               HorizontalOptions="Center"
               VerticalOptions="StartAndExpand" 
               TextColor="Black"
               FontSize="30"
               Padding="0,20"
               FontAttributes="Bold"/>
        <Label Text="{Binding BuildingAddressFormatted}"
               HorizontalOptions="Center"
               VerticalOptions="StartAndExpand" 
               FontSize="20"
               TextColor="Black"/>
        <!-- ListView, bound to the Schools list from the SchoolViewModel from the binding context-->
        <ListView x:Name="LocationList"
                  ItemsSource="{Binding LocationsInBuildings}">
        <ListView.ItemTemplate>
                <DataTemplate>
                    <!-- TextCell to determine what will show up on each list entry.
                        Bound to the Name property of each building in the list.-->
                    <TextCell Text="{Binding LocationName}" 
                              TextColor="White"/>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </StackLayout>
</ContentPage>